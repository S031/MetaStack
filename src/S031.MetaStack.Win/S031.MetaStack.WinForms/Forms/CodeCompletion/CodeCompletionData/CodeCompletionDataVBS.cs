using ICSharpCode.TextEditor.Gui.CompletionWindow;

namespace S031.MetaStack.WinForms
{
	internal static partial class CodeCompletionData
	{
		internal const int _statement = 0;
		internal const int _function = 1;
		internal const int _constant = 2;
		internal const int _method = 3;
		internal const int _property = 4;
		internal const int _variable = 5;
		internal const int _table = 6;

		public static ICompletionData[] VBSStatements = new ICompletionData[]{
			new DefaultCompletionData("And", "Statement", _statement),
			new DefaultCompletionData("Is", "Statement", _statement),
			new DefaultCompletionData("Like", "Statement", _statement),
			new DefaultCompletionData("Mod", "Statement", _statement),
			new DefaultCompletionData("New", "Statement", _statement),
			new DefaultCompletionData("Not", "Statement", _statement),
			new DefaultCompletionData("Or", "Statement", _statement),
			new DefaultCompletionData("Xor", "Statement", _statement),
			new DefaultCompletionData("As", "Statement", _statement),
			new DefaultCompletionData("End", "Statement", _statement),
			new DefaultCompletionData("Private", "Statement", _statement),
			new DefaultCompletionData("Public", "Statement", _statement),
			new DefaultCompletionData("Const", "Statement", _statement),
			new DefaultCompletionData("Resume", "Statement", _statement),
			new DefaultCompletionData("Option", "Statement", _statement),
			new DefaultCompletionData("Let", "Statement", _statement),
			new DefaultCompletionData("GoTo", "Statement", _statement),
			new DefaultCompletionData("GoSub", "Statement", _statement),
			new DefaultCompletionData("Call", "Statement", _statement),
			new DefaultCompletionData("Continue", "Statement", _statement),
			new DefaultCompletionData("Dim", "Statement", _statement),
			new DefaultCompletionData("ReDim", "Statement", _statement),
			new DefaultCompletionData("Erase", "Statement", _statement),
			new DefaultCompletionData("On", "Statement", _statement),
			new DefaultCompletionData("Error", "Statement", _statement),
			new DefaultCompletionData("Exit", "Statement", _statement),
			new DefaultCompletionData("Sub", "Statement", _statement),
			new DefaultCompletionData("Function", "Statement", _statement),
			new DefaultCompletionData("Get", "Statement", _statement),
			new DefaultCompletionData("Set", "Statement", _statement),
			new DefaultCompletionData("Property", "Statement", _statement),
			new DefaultCompletionData("With", "Statement", _statement),
			new DefaultCompletionData("Do", "Statement", _statement),
			new DefaultCompletionData("While", "Statement", _statement),
			new DefaultCompletionData("Loop", "Statement", _statement),
			new DefaultCompletionData("Wend", "Statement", _statement),
			new DefaultCompletionData("If", "Statement", _statement),
			new DefaultCompletionData("Then", "Statement", _statement),
			new DefaultCompletionData("Else", "Statement", _statement),
			new DefaultCompletionData("ElseIf", "Statement", _statement),
			new DefaultCompletionData("EndIf", "Statement", _statement),
			new DefaultCompletionData("For", "Statement", _statement),
			new DefaultCompletionData("To", "Statement", _statement),
			new DefaultCompletionData("Step", "Statement", _statement),
			new DefaultCompletionData("Each", "Statement", _statement),
			new DefaultCompletionData("In", "Statement", _statement),
			new DefaultCompletionData("Next", "Statement", _statement),
			new DefaultCompletionData("Select", "Statement", _statement),
			new DefaultCompletionData("Case", "Statement", _statement),
			new DefaultCompletionData("Preserve", "Statement", _statement),
			new DefaultCompletionData("Explicit", "Statement", _statement),
			new DefaultCompletionData("Class", "Statement", _statement)
		};

		public static ICompletionData[] VBSConstants = new ICompletionData[]{
			new DefaultCompletionData("vbOKOnly", "vbOKOnly 0 Display OK button only MsgBox constant", _constant),
			new DefaultCompletionData("vbOKCancel", "vbOKCancel 1 Display OK and Cancel buttons MsgBox constant", _constant),
			new DefaultCompletionData("vbAbortRetryIgnore", "vbAbortRetryIgnore 2 Display Abort, Retry, and Ignore buttons MsgBox constant", _constant),
			new DefaultCompletionData("vbYesNoCancel", "vbYesNoCancel 3 Display Yes, No, and Cancel buttons MsgBox constant", _constant),
			new DefaultCompletionData("vbYesNo", "vbYesNo 4 Display Yes and No buttons MsgBox constant", _constant),
			new DefaultCompletionData("vbRetryCancel", "vbRetryCancel 5 Display Retry and Cancel buttons MsgBox constant", _constant),
			new DefaultCompletionData("vbCritical", "vbCritical 16 Display Critical Message icon MsgBox constant", _constant),
			new DefaultCompletionData("vbQuestion", "vbQuestion 32 Display Warning Query icon MsgBox constant", _constant),
			new DefaultCompletionData("vbExclamation", "vbExclamation 48 Display Warning Message icon MsgBox constant", _constant),
			new DefaultCompletionData("vbInformation", "vbInformation 64 Display Information Message icon MsgBox constant", _constant),
			new DefaultCompletionData("vbOK", "vbOK 1 OK button was clicked MsgBox constant", _constant),
			new DefaultCompletionData("vbCancel", "vbCancel 2 Cancel button was clicked MsgBox constant", _constant),
			new DefaultCompletionData("vbAbort", "vbAbort 3 Abort button was clicked MsgBox constant", _constant),
			new DefaultCompletionData("vbRetry", "vbRetry 4 Retry button was clicked MsgBox constant", _constant),
			new DefaultCompletionData("vbIgnore", "vbIgnore 5 Ignore button was clicked MsgBox constant", _constant),
			new DefaultCompletionData("vbYes", "vbYes 6 Yes button was clicked MsgBox constant", _constant),
			new DefaultCompletionData("vbNo", "vbNo 7 No button was clicked MsgBox constant", _constant),
			new DefaultCompletionData("vbCr", "vbCr = Chr(13) Carriage return", _constant),
			new DefaultCompletionData("VbCrLf", "VbCrLf = Chr(13) & Chr(10) Carriage return–linefeed combination", _constant),
			new DefaultCompletionData("vbLf", "vbLf = Chr(10) Line feed", _constant),
			new DefaultCompletionData("vbNullString", "vbNullString String having value 0 Not the same as a zero-length string (''); used for calling external procedures", _constant),
			new DefaultCompletionData("vbTab", "vbTab = Chr(9) Horizontal tab", _constant),
			new DefaultCompletionData("Boolean", "Boolean Data type", _constant),
			new DefaultCompletionData("Byte", "Byte Data type", _constant),
			new DefaultCompletionData("Char", "Char Data type", _constant),
			new DefaultCompletionData("Date", "Date Data type", _constant),
			new DefaultCompletionData("Decimal", "Decimal Data type", _constant),
			new DefaultCompletionData("Double", "Double Data type", _constant),
			new DefaultCompletionData("Integer", "Integer Data type", _constant),
			new DefaultCompletionData("Long", "Long Data type", _constant),
			new DefaultCompletionData("Object", "Object Data type", _constant),
			new DefaultCompletionData("SByte", "SByte Data type", _constant),
			new DefaultCompletionData("Short", "Short Data type", _constant),
			new DefaultCompletionData("Single", "Single Data type", _constant),
			new DefaultCompletionData("String", "String Data type", _constant),
			new DefaultCompletionData("UInteger", "UInteger Data type", _constant),
			new DefaultCompletionData("ULong", "ULong Data type", _constant),
			new DefaultCompletionData("UShort", "UShort Data type", _constant),
			new DefaultCompletionData("Variant", "Variant Data type", _constant),
			new DefaultCompletionData("False", "The False keyword has a value equal to 0", _constant),
			new DefaultCompletionData("Me", "", _constant),
			new DefaultCompletionData("Nothing", "The Nothing keyword in VBScript is used to disassociate an object variable from any actual object", _constant),
			new DefaultCompletionData("True", "The True keyword has a value equal to -1", _constant)
		};

		public static ICompletionData[] VBSFunctions = new ICompletionData[]{
			new DefaultCompletionData("CBool", "CBool(expression) Returns an expression that has been converted to a Variant of subtype Boolean. ", _function),
			new DefaultCompletionData("CByte", "CByte(expression) Returns an expression that has been converted to a Variant of subtype Byte", _function),
			new DefaultCompletionData("CChar", "", _function),
			new DefaultCompletionData("CDate", "CDate(date) Returns an expression that has been converted to a Variant of subtype Date", _function),
			new DefaultCompletionData("CDec", "", _function),
			new DefaultCompletionData("CDbl", "", _function),
			new DefaultCompletionData("CInt", "CInt(expression) Returns an expression that has been converted to a Variant of subtype Integer", _function),
			new DefaultCompletionData("CLng", "CLng(expression) Returns an expression that has been converted to a Variant of subtype Long", _function),
			new DefaultCompletionData("CObj", "", _function),
			new DefaultCompletionData("CSByte", "", _function),
			new DefaultCompletionData("CShort", "", _function),
			new DefaultCompletionData("CSng", "CSng(expression) Returns an expression that has been converted to a Variant of subtype Single. ", _function),
			new DefaultCompletionData("CStr", "CStr(expression) Returns an expression that has been converted to a Variant of subtype String", _function),
			new DefaultCompletionData("CType", "", _function),
			new DefaultCompletionData("CUInt", "", _function),
			new DefaultCompletionData("CULng", "", _function),
			new DefaultCompletionData("CUShort", "", _function),
			new DefaultCompletionData("Abs", "Abs(number) Returns the absolute value of a number", _function),
			new DefaultCompletionData("Array", "Array(arglist) Returns a Variant containing an array", _function),
			new DefaultCompletionData("Asc", "Asc(string) Returns the ANSI character code corresponding to the first letter in a string", _function),
			new DefaultCompletionData("Atn", "Atn(number) Returns the arctangent of a number", _function),
			new DefaultCompletionData("CCur", "CCur(expression) Returns an expression that has been converted to a Variant of subtype Currency", _function),
			new DefaultCompletionData("Chr", "Chr(charcode) Returns the character associated with the specified ANSI character code", _function),
			new DefaultCompletionData("Conversions", "", _function),
			new DefaultCompletionData("Cos", "Cos(number) Returns the cosine of an angle.", _function),
			new DefaultCompletionData("CreateObject", "CreateObject(servername.typename [, location]) Creates and returns a reference to an Automation object", _function),
			new DefaultCompletionData("Date", "Returns the current system date", _function),
			new DefaultCompletionData("DateAdd", "DateAdd(interval, number, date) Returns a date to which a specified time interval has been added", _function),
			new DefaultCompletionData("DateDiff", "DateDiff(interval, date1, date2 [,firstdayofweek[, firstweekofyear]]) Returns the number of intervals between two dates. ", _function),
			new DefaultCompletionData("DatePart", "DatePart(interval, date[, firstdayofweek[, firstweekofyear]]) Returns the specified part of a given date. ", _function),
			new DefaultCompletionData("DateSerial", "DateSerial(year, month, day) Returns a Variant of subtype Date for a specified year, month, and day. ", _function),
			new DefaultCompletionData("DateValue", "DateValue(date) Returns a Variant of subtype Date. ", _function),
			new DefaultCompletionData("Day", "Day(date) Returns a whole number between 1 and 31, inclusive, representing the day of the month. ", _function),
			new DefaultCompletionData("Escape", "Escape(charString) Encodes a string so it contains only ASCII characters. ", _function),
			new DefaultCompletionData("Eval", "Eval(expression) Evaluates an expression and returns the result. ", _function),
			new DefaultCompletionData("Exp", "Exp(number) Returns e (the base of natural logarithms) raised to a power. ", _function),
			new DefaultCompletionData("Filter", "Filter(InputStrings, Value[, Include[, Compare]]) Returns a zero-based array containing a subset of a string array based on a specified filter criteria. ", _function),
			new DefaultCompletionData("FormatCurrency", "", _function),
			new DefaultCompletionData("FormatDateTime", "", _function),
			new DefaultCompletionData("FormatNumber", "", _function),
			new DefaultCompletionData("FormatPercent", "", _function),
			new DefaultCompletionData("GetLocale", "GetLocale() Returns the current locale ID value. ", _function),
			new DefaultCompletionData("GetObject", "GetObject([pathname] [, class]) Returns a reference to an Automation object from a file. ", _function),
			new DefaultCompletionData("GetRef", "Set object.eventname = GetRef(procname) Returns a reference to a procedure that can be bound to an event. ", _function),
			new DefaultCompletionData("Hex", "Hex(number) Returns a string representing the hexadecimal value of a number. ", _function),
			new DefaultCompletionData("Hour", "Hour(time) Returns a whole number between 0 and 23, inclusive, representing the hour of the day. ", _function),
			new DefaultCompletionData("InputBox", "InputBox(prompt[, title][, default][, xpos][, ypos][, helpfile, context]) Displays a prompt in a dialog box, waits for the user to input text or click a button, and returns the contents of the text box. ", _function),
			new DefaultCompletionData("InStr", "InStr([start, ]string1, string2[, compare]) Returns the position of the first occurrence of one string within another.", _function),
			new DefaultCompletionData("InStrRev", "InStrRev(string1, string2[, start[, compare]]) Returns the position of an occurrence of one string within another, from the end of string. ", _function),
			new DefaultCompletionData("Int", "Int(number) Fix(number) Returns the integer portion of a number. ", _function),
			new DefaultCompletionData("IsArray", "IsArray(varname) Returns a Boolean value indicating whether a variable is an array. ", _function),
			new DefaultCompletionData("IsDate", "IsDate(expression) Returns a Boolean value indicating whether an expression can be converted to a date. ", _function),
			new DefaultCompletionData("IsEmpty", "IsEmpty(expression) Returns a Boolean value indicating whether a variable has been initialized. ", _function),
			new DefaultCompletionData("IsNull", "IsNull(expression) Returns a Boolean value that indicates whether an expression contains no valid data (Null). ", _function),
			new DefaultCompletionData("IsNumeric", "IsNumeric(expression) Returns a Boolean value indicating whether an expression can be evaluated as a number. ", _function),
			new DefaultCompletionData("IsObject", "IsObject(expression) Returns a Boolean value indicating whether an expression references a valid Automation object. ", _function),
			new DefaultCompletionData("Join", "Join(list[, delimiter]) Returns the smallest available subscript for the indicated dimension of an array. ", _function),
			new DefaultCompletionData("LBound", "LBound(arrayname[, dimension]) Returns a string created by joining a number of substrings contained in an array. ", _function),
			new DefaultCompletionData("LCase", "LCase(string) Returns a string that has been converted to lowercase. ", _function),
			new DefaultCompletionData("Left", "Left(string, length) Returns a specified number of characters from the left side of a string.", _function),
			new DefaultCompletionData("Len", "Len(string | varname) Returns the number of characters in a string or the number of bytes required to store a variable. ", _function),
			new DefaultCompletionData("LoadPicture", "LoadPicture(picturename) Returns a picture object. Available only on 32-bit platforms. ", _function),
			new DefaultCompletionData("Log", "Log(number) Returns the natural logarithm of a number. ", _function),
			new DefaultCompletionData("LTrim", "LTrim(string), RTrim(string), Trim(string) Returns a copy of a string without leading spaces (LTrim), trailing spaces (RTrim), or both leading and trailing spaces (Trim). ", _function),
			new DefaultCompletionData("RTrim", "LTrim(string), RTrim(string), Trim(string) Returns a copy of a string without leading spaces (LTrim), trailing spaces (RTrim), or both leading and trailing spaces (Trim). ", _function),
			new DefaultCompletionData("Trim", "LTrim(string), RTrim(string), Trim(string) Returns a copy of a string without leading spaces (LTrim), trailing spaces (RTrim), or both leading and trailing spaces (Trim). ", _function),
			new DefaultCompletionData("Maths", "", _function),
			new DefaultCompletionData("Mid", "Mid(string, start[, length]) Returns a specified number of characters from a string. ", _function),
			new DefaultCompletionData("Minute", "Minute(time) Returns a whole number between 0 and 59, inclusive, representing the minute of the hour. ", _function),
			new DefaultCompletionData("Month", "Month(date) Returns a whole number between 1 and 12, inclusive, representing the month of the year. ", _function),
			new DefaultCompletionData("MonthName", "MonthName(month[, abbreviate]) Returns a string indicating the specified month. ", _function),
			new DefaultCompletionData("MsgBox", "MsgBox(prompt[, buttons][, title][, helpfile, context]) Displays a message in a dialog box, waits for the user to click a button, and returns a value indicating which button the user clicked.", _function),
			new DefaultCompletionData("Now", "Now Returns the current date and time according to the setting of your computer's system date and time. ", _function),
			new DefaultCompletionData("Oct", "Oct(number) Returns a string representing the octal value of a number. ", _function),
			new DefaultCompletionData("Replace", "Replace(expression, find, replacewith[, start[, count[, compare]]]) Returns a string in which a specified substring has been replaced with another substring a specified number of times. ", _function),
			new DefaultCompletionData("RGB", "RGB(red, green, blue) Returns a whole number representing an RGB color value.", _function),
			new DefaultCompletionData("Right", "Right(string, length) Returns a specified number of characters from the right side of a string. ", _function),
			new DefaultCompletionData("Rnd", "Rnd[(number)] Returns a random number", _function),
			new DefaultCompletionData("Round", "Round(expression[, numdecimalplaces]) Returns a number rounded to a specified number of decimal places. ", _function),
			new DefaultCompletionData("ScriptEngine", "ScriptEngine Returns a string representing the scripting language in use. ", _function),
			new DefaultCompletionData("Second", "Second(time) Returns a whole number between 0 and 59, inclusive, representing the second of the minute. ", _function),
			new DefaultCompletionData("SetLocale", "SetLocale(lcid) Sets the global locale and returns the previous locale.", _function),
			new DefaultCompletionData("Sgn", "Sgn(number) Returns an integer indicating the sign of a number. ", _function),
			new DefaultCompletionData("Sin", "Sin(number) Returns the sine of an angle. ", _function),
			new DefaultCompletionData("Space", "Space(number) Returns a string consisting of the specified number of spaces. ", _function),
			new DefaultCompletionData("Split", "Split(expression[, delimiter[, count[, compare]]])Returns a zero-based, one-dimensional array containing a specified number of substrings.", _function),
			new DefaultCompletionData("Sqr", "Sqr(number) Returns the square root of a number. ", _function),
			new DefaultCompletionData("StrComp", "StrComp(string1, string2[, compare]) Returns a value indicating the result of a string comparison. ", _function),
			new DefaultCompletionData("String", "String(number, character) Returns a repeating character string of the length specified. ", _function),
			new DefaultCompletionData("StrReverse", "StrReverse(string1) Returns a string in which the character order of a specified string is reversed. ", _function),
			new DefaultCompletionData("Tan", "Tan(number)Returns the tangent of an angle. ", _function),
			new DefaultCompletionData("Time", "Time Returns a Variant of subtype Date indicating the current system time. ", _function),
			new DefaultCompletionData("Timer", "Timer Returns the number of seconds that have elapsed since 12:00 AM (midnight).", _function),
			new DefaultCompletionData("TimeSerial", "TimeSerial(hour, minute, second) Returns a Variant of subtype Date containing the time for a specific hour, minute, and second. ", _function),
			new DefaultCompletionData("TimeValue", "TimeValue(time) Returns a Variant of subtype Date containing the time. ", _function),
			new DefaultCompletionData("TypeName", "TypeName(varname)Returns a string that provides Variant subtype information about a variable. ", _function),
			new DefaultCompletionData("UBound", "UBound(arrayname[, dimension]) Returns the largest available subscript for the indicated dimension of an array. ", _function),
			new DefaultCompletionData("UCase", "UCase(string) Returns a string that has been converted to uppercase. ", _function),
			new DefaultCompletionData("Unescape", "Unescape(charString) Decodes a string encoded with the Escape function. ", _function),
			new DefaultCompletionData("VarType", "VarType(varname) Returns a value indicating the subtype of a variable. ", _function),
			new DefaultCompletionData("Weekday", "Weekday(date, [firstdayofweek]) Returns a whole number representing the day of the week. ", _function),
			new DefaultCompletionData("WeekdayName", "WeekdayName(weekday, abbreviate, firstdayofweek) Returns a string indicating the specified day of the week. ", _function),
			new DefaultCompletionData("Year", "Year(date) Returns a whole number representing the year. ", _function)			
		};

		public static ICompletionData[] VBSMethods = new ICompletionData[]{
			new DefaultCompletionData("Add", "Sub Add(Key, Item) Member of Scripting.Dictionary Add a new key and item to the dictionary.", _method),
			new DefaultCompletionData("Exists", "Function Exists(Key) As Boolean Member of Scripting.Dictionary Determine if a given key is in the dictionary.", _method),
			new DefaultCompletionData("Items", "Function Items() Member of Scripting.Dictionary Get an array containing all items in the dictionary.", _method),
			new DefaultCompletionData("Keys", "Function Keys() Member of Scripting.Dictionary Get an array containing all keys in the dictionary.", _method),
			new DefaultCompletionData("Remove", "Sub Remove(Key) Member of Scripting.Dictionary Remove a given key from the dictionary.", _method),
			new DefaultCompletionData("RemoveAll", "Sub RemoveAll() Member of Scripting.Dictionary Remove all information from the dictionary.", _method),
			new DefaultCompletionData("Cancel", "Sub Cancel() Member of ADODB.Recordset", _method),
			new DefaultCompletionData("Clone", "Function Clone([LockType As LockTypeEnum = adLockUnspecified]) As Recordset Member of ADODB.Recordset", _method),
			new DefaultCompletionData("Close", "Sub Close() Member of ADODB.Recordset", _method),
			new DefaultCompletionData("Delete", "Sub Delete([AffectRecords As AffectEnum = adAffectCurrent]) Member of ADODB.Recordset", _method),
			new DefaultCompletionData("Find", "Sub Find(Criteria As String, [SkipRecords As ADO_LONGPTR], [SearchDirection As SearchDirectionEnum = adSearchForward], [Start]) Member of ADODB.Recordset", _method),
			new DefaultCompletionData("MoveFirst", "Sub MoveFirst() Member of ADODB.Recordset", _method),
			new DefaultCompletionData("MoveLast", "Sub MoveLast() Member of ADODB.Recordset", _method),
			new DefaultCompletionData("MoveNext", "Sub MoveNext() Member of ADODB.Recordset", _method),
			new DefaultCompletionData("MovePrevious", "Sub MovePrevious() Member of ADODB.Recordset", _method),
			new DefaultCompletionData("Open", "Sub Open([Source], [ActiveConnection], [CursorType As CursorTypeEnum = adOpenUnspecified], [LockType As LockTypeEnum = adLockUnspecified], [Options As Long = -1]) Member of ADODB.Recordset", _method),
			new DefaultCompletionData("Update", "Sub Update([Fields], [Values]) Member of ADODB.Recordset", _method),
			new DefaultCompletionData("Close", "Sub Close() Member of ADODB.Stream", _method),
			new DefaultCompletionData("CopyTo", "Sub CopyTo(DestStream As Stream, [CharNumber As ADO_LONGPTR = -1]) Member of ADODB.Stream", _method),
			new DefaultCompletionData("LoadFromFile", "Sub LoadFromFile(FileName As String) Member of ADODB.Stream", _method),
			new DefaultCompletionData("Open", "Sub Open([Source], [Mode As ConnectModeEnum = adModeUnknown], [Options As StreamOpenOptionsEnum = adOpenStreamUnspecified], [UserName As String], [Password As String]) Member of ADODB.Stream", _method),
			new DefaultCompletionData("Read", "Function Read([NumBytes As Long = -1]) Member of ADODB.Stream", _method),
			new DefaultCompletionData("ReadText", "Function ReadText([NumChars As Long = -1]) As String Member of ADODB.Stream", _method),
			new DefaultCompletionData("SaveToFile", "Sub SaveToFile(FileName As String, [Options As SaveOptionsEnum = adSaveCreateNotExist]) Member of ADODB.Stream", _method),
			new DefaultCompletionData("SetEOS", "Sub SetEOS() Member of ADODB.Stream", _method),
			new DefaultCompletionData("SkipLine", "Sub SkipLine() Member of ADODB.Stream", _method),
			new DefaultCompletionData("Write", "Sub Write(Buffer) Member of ADODB.Stream", _method),
			new DefaultCompletionData("WriteText", "Sub WriteText(Data As String, [Options As StreamWriteEnum = adWriteChar]) Member of ADODB.Stream", _method),
			new DefaultCompletionData("Clear", "Sub Clear() Member of VBA.ErrObject Clears all property settings of the Err object", _method),
			new DefaultCompletionData("Raise", "Sub Raise(Number As Long, [Source], [Description], [HelpFile], [HelpContext]) Member of VBA.ErrObject Generates a run-time error", _method),
			new DefaultCompletionData("BuildPath", "Function BuildPath(Path As String, Name As String) As String Member of Scripting.FileSystemObject Generate a path from an existing path and a name", _method),
			new DefaultCompletionData("CopyFile", "Sub CopyFile(Source As String, Destination As String, [OverWriteFiles As Boolean = True]) Member of Scripting.FileSystemObject Copy a file", _method),
			new DefaultCompletionData("CopyFolder", "Sub CopyFolder(Source As String, Destination As String, [OverWriteFiles As Boolean = True]) Member of Scripting.FileSystemObject Copy a folder", _method),
			new DefaultCompletionData("CreateFolder", "Function CreateFolder(Path As String) As Folder Member of Scripting.FileSystemObject Create a folder", _method),
			new DefaultCompletionData("CreateTextFile", "Function CreateTextFile(FileName As String, [Overwrite As Boolean = True], [Unicode As Boolean = False]) As TextStream Member of Scripting.FileSystemObject Create a file as a TextStream", _method),
			new DefaultCompletionData("DeleteFile", "Sub DeleteFile(FileSpec As String, [Force As Boolean = False]) Member of Scripting.FileSystemObject Delete a file", _method),
			new DefaultCompletionData("DeleteFolder", "Sub DeleteFolder(FolderSpec As String, [Force As Boolean = False]) Member of Scripting.FileSystemObject Delete a folder", _method),
			new DefaultCompletionData("DriveExists", "Function DriveExists(DriveSpec As String) As Boolean Member of Scripting.FileSystemObject Check if a drive or a share exists", _method),
			new DefaultCompletionData("FileExists", "Function FileExists(FileSpec As String) As Boolean Member of Scripting.FileSystemObject Check if a file exists", _method),
			new DefaultCompletionData("FolderExists", "Function FolderExists(FolderSpec As String) As Boolean Member of Scripting.FileSystemObject Check if a path exists", _method),
			new DefaultCompletionData("GetAbsolutePathName", "Function GetAbsolutePathName(Path As String) As String Member of Scripting.FileSystemObject Return the canonical representation of the path", _method),
			new DefaultCompletionData("GetBaseName", "Function GetBaseName(Path As String) As String Member of Scripting.FileSystemObject Return base name from a path", _method),
			new DefaultCompletionData("GetDrive", "Function GetDrive(DriveSpec As String) As Drive Member of Scripting.FileSystemObject Get drive or UNC share", _method),
			new DefaultCompletionData("GetDriveName", "Function GetDriveName(Path As String) As String Member of Scripting.FileSystemObject Return drive from a path", _method),
			new DefaultCompletionData("GetExtensionName", "Function GetExtensionName(Path As String) As String Member of Scripting.FileSystemObject Return extension from path", _method),
			new DefaultCompletionData("GetFile", "Function GetFile(FilePath As String) As File Member of Scripting.FileSystemObject Get file", _method),
			new DefaultCompletionData("GetFileName", "Function GetFileName(Path As String) As String Member of Scripting.FileSystemObject Return the file name from a path", _method),
			new DefaultCompletionData("GetFileVersion", "Function GetFileVersion(FileName As String) As String Member of Scripting.FileSystemObject Retrieve the file version of the specified file into a string", _method),
			new DefaultCompletionData("GetFolder", "Function GetFolder(FolderPath As String) As Folder Member of Scripting.FileSystemObject Get folder", _method),
			new DefaultCompletionData("GetParentFolderName", "Function GetParentFolderName(Path As String) As String Member of Scripting.FileSystemObject Return path to the parent folder", _method),
			new DefaultCompletionData("GetSpecialFolder", "Function GetSpecialFolder(SpecialFolder As SpecialFolderConst) As Folder Member of Scripting.FileSystemObject Get location of various system folders", _method),
			new DefaultCompletionData("GetStandardStream", "Function GetStandardStream(StandardStreamType As StandardStreamTypes, [Unicode As Boolean = False]) As TextStream Member of Scripting.FileSystemObject Retrieve the standard input, output or error stream", _method),
			new DefaultCompletionData("GetTempName", "Function GetTempName() As String Member of Scripting.FileSystemObject Generate name that can be used to name a temporary file", _method),
			new DefaultCompletionData("MoveFile", "Sub MoveFile(Source As String, Destination As String) Member of Scripting.FileSystemObject Move a file", _method),
			new DefaultCompletionData("MoveFolder", "Sub MoveFolder(Source As String, Destination As String) Member of Scripting.FileSystemObject Move a folder", _method),
			new DefaultCompletionData("OpenTextFile", "Function OpenTextFile(FileName As String, [IOMode As IOMode = ForReading], [Create As Boolean = False], [Format As Tristate = TristateFalse]) As TextStream Member of Scripting.FileSystemObject Open a file as a TextStream", _method),
			new DefaultCompletionData("Copy", "Sub Copy(Destination As String, [OverWriteFiles As Boolean = True]) Member of Scripting.File Copy this file", _method),
			new DefaultCompletionData("Delete", "Sub Delete([Force As Boolean = False]) Member of Scripting.File Delete this file", _method),
			new DefaultCompletionData("Move", "Sub Move(Destination As String) Member of Scripting.File Move this file", _method),
			new DefaultCompletionData("OpenAsTextStream", "Function OpenAsTextStream([IOMode As IOMode = ForReading], [Format As Tristate = TristateFalse]) As TextStream Member of Scripting.File Open a file as a TextStream", _method)
		};

		public static ICompletionData[] VBSProperties = new ICompletionData[]{
			new DefaultCompletionData("CompareMode", "Property CompareMode As CompareMethod Member of Scripting.Dictionary Set or get the string comparison method.", _method),
			new DefaultCompletionData("Count", "Property Count As Long read-only Member of Scripting.Dictionary Get the number of items in the dictionary.", _method),
			new DefaultCompletionData("Item", "Property Item(Key) Default member of Scripting.Dictionary Set or get the item for a given key", _method),
			new DefaultCompletionData("Key", "Property Key(Key) Member of Scripting.Dictionary Change a key to a different key.", _method),
			new DefaultCompletionData("BOF", "Property BOF As Boolean read-only Member of ADODB.Recordset", _property),
			new DefaultCompletionData("Bookmark", "Property Bookmark As Variant Member of ADODB.Recordset", _property),
			new DefaultCompletionData("EOF", "Property EOF As Boolean read-only Member of ADODB.Recordset", _property),
			new DefaultCompletionData("Fields", "Property Fields As Fields read-only Default member of ADODB.Recordset", _property),
			new DefaultCompletionData("Filter", "Property Filter As Variant Member of ADODB.Recordset", _property),
			new DefaultCompletionData("RecordCount", "Property RecordCount As ADO_LONGPTR read-only Member of ADODB.Recordset", _property),
			new DefaultCompletionData("Sort", "Property Sort As String Member of ADODB.Recordset", _property),
			new DefaultCompletionData("State", "Property State As Long read-only Member of ADODB.Recordset", _property),
			new DefaultCompletionData("Status", "Property Status As Long read-only Member of ADODB.Recordset", _property),
			new DefaultCompletionData("Charset", "Property Charset As String Member of ADODB.Stream", _property),
			new DefaultCompletionData("EOS", "Property EOS As Boolean read-only Member of ADODB.Stream", _property),
			new DefaultCompletionData("LineSeparator", "Property LineSeparator As LineSeparatorEnum Member of ADODB.Stream", _property),
			new DefaultCompletionData("Position", "Property Position As ADO_LONGPTR Member of ADODB.Stream", _property),
			new DefaultCompletionData("Size", "Property Size As ADO_LONGPTR read-only Member of ADODB.Stream", _property),
			new DefaultCompletionData("State", "Property State As ObjectStateEnum read-only Member of ADODB.Stream", _property),
			new DefaultCompletionData("Description", "Property Description As String Member of VBA.ErrObject Returns or sets the string expression containing a descriptive string associated with an object", _property),
			new DefaultCompletionData("HelpContext", "Property HelpContext As Long Member of VBA.ErrObject Returns or sets a context ID for a topic in a Help file", _property),
			new DefaultCompletionData("HelpFile", "Property HelpFile As String Member of VBA.ErrObject Returns or sets a fully qualified path to a Help file", _property),
			new DefaultCompletionData("LastDllError", "Property LastDllError As Long read-only Member of VBA.ErrObject Returns system error code from a call to a DLL	", _property),
			new DefaultCompletionData("Number", "Property Number As Long Default member of VBA.ErrObject Returns or sets a numeric value representing an error", _property),
			new DefaultCompletionData("Source", "Property Source As String Member of VBA.ErrObject Returns or sets the name of the object that originated the error", _property),
			new DefaultCompletionData("Drives", "Property Drives As Drives read-only Member of Scripting.FileSystemObject Get drives collection", _property),
			new DefaultCompletionData("Attributes", "Property Attributes As FileAttribute Member of Scripting.File File attributes", _property),
			new DefaultCompletionData("DateCreated", "Property DateCreated As Date read-only Member of Scripting.File Date file was created", _property),
			new DefaultCompletionData("DateLastAccessed", "Property DateLastAccessed As Date read-only Member of Scripting.File Date file was last accessed", _property),
			new DefaultCompletionData("DateLastModified", "Property DateLastModified As Date read-only Member of Scripting.File Date file was last modified", _property),
			new DefaultCompletionData("Drive", "Property Drive As Drive read-only Member of Scripting.File Get drive that contains file", _property),
			new DefaultCompletionData("Name", "Property Name As String Member of Scripting.File Get name of file", _property),
			new DefaultCompletionData("ParentFolder", "Property ParentFolder As Folder read-only Member of Scripting.File Get folder that contains file", _property),
			new DefaultCompletionData("Path", "Property Path As String read-only Default member of Scripting.File Path to the file", _property),
			new DefaultCompletionData("ShortName", "Property ShortName As String read-only Member of Scripting.File Short name", _property),
			new DefaultCompletionData("ShortPath", "Property ShortPath As String read-only Member of Scripting.File Short path", _property),
			new DefaultCompletionData("Size", "Property Size As Variant read-only Member of Scripting.File File size", _property),
			new DefaultCompletionData("Type", "Property Type As String read-only Member of Scripting.File Type description", _property),
			new DefaultCompletionData("Top", "A Top coordinate of control", _property),
			new DefaultCompletionData("Left", "A Left coordinate of control", _property),
			new DefaultCompletionData("Bottom", "A Bottom coordinate of control", _property),
			new DefaultCompletionData("Right", "A Right coordinate of control", _property),
			new DefaultCompletionData("Text", "A Text property of control", _property)
		};

		public static ICompletionData[] NewbankStatements = new ICompletionData[]{
			new DefaultCompletionData("BnkTools", "Global functions from BnkTools.dll", _statement),
			new DefaultCompletionData("BsTools", "Global functions from BsTools.dll", _statement),
			new DefaultCompletionData("Newbank", "Global functions from Newbank.exe", _statement),
			new DefaultCompletionData("VBO", "Newbank.VBO class", _statement),
			new DefaultCompletionData("Parent", "Newbank.CApplication class", _statement),
			new DefaultCompletionData("Setup", "Newbank.CSetup class", _statement),
			new DefaultCompletionData("ActiveBrowse", "Newbank.ActiveBrowse class", _statement)
		};

		public static ICompletionData[] NewbankConstants = new ICompletionData[]{
			new DefaultCompletionData("vbModal", "Open form in modal state", _constant),
			new DefaultCompletionData("vbModeless", "Open form in modeless state", _constant),
			new DefaultCompletionData("bsGRReadOnly", "Open Recordset for read only", _constant),
			new DefaultCompletionData("bsGRReadWrite", "Open Recordset for read & write", _constant),
			new DefaultCompletionData("bsViewAsForm", "Open Newbank.Browse form mode", _constant),
			new DefaultCompletionData("bsViewAsDialog", "Open Newbank.Browse dialog mode", _constant),
			new DefaultCompletionData("WinCharSet", "WinCharSet", _constant),
			new DefaultCompletionData("DOSCharSet", "DOSCharSet", _constant),
			new DefaultCompletionData("UnicodeCharSet", "UnicodeCharSet", _constant),
			new DefaultCompletionData("Koi8CharSet", "Koi8CharSet", _constant),
			new DefaultCompletionData("UTF8CharSet", "UTF8CharSet", _constant),
			new DefaultCompletionData("PayOut", "Public Const PayOut = 1", _constant),
			new DefaultCompletionData("PayIn", "Public Const PayIn = 2", _constant),
			new DefaultCompletionData("PayInter", "Public Const PayInter = 3", _constant)
		};

		public static ICompletionData[] NewbankFunctions = new ICompletionData[]{
			new DefaultCompletionData("IsBank", "Public Function IsBank(sBICStr As String) As Boolean", _function),
			new DefaultCompletionData("OpenStream", "Public Function OpenStream(sTextFile As String) As ADODB.Stream", _function),
			new DefaultCompletionData("NewObject", "Public Function NewObject(sObjectName As String) As BsTools.MLObject", _function),
			new DefaultCompletionData("Print", "Public Sub Print(sText As String)", _function),
			new DefaultCompletionData("GetHist", "Public Function GetHist(sAccntAs String, dOper As Date, bPlan As Boolean) As Currency", _function),
			new DefaultCompletionData("DoKeyPress", "Public Sub DoKeyPress(KeyAscii As Integer, ByVal bDec As Boolean)", _function),
			new DefaultCompletionData("IfEmpty", "Public Function IfEmpty(vData As Variant, vDef As Variant) As Variant", _function),
			new DefaultCompletionData("GetExportFile", "Public Function GetExportFile(sSource As String) As String", _function),
			new DefaultCompletionData("SetFolder", "Public Function SetFolder(sFolder As String) As String", _function),
			new DefaultCompletionData("ErrSave", "Public Function ErrSave(oErr As Err)", _function),
			new DefaultCompletionData("ErrRaise", "Public Sub ErrRaise(sErr)", _function)
		};

		public static ICompletionData[] NewbankMethods = new ICompletionData[]{
			new DefaultCompletionData("DataEmpty", "Public Function BnkTools.DataEmpty(ByVal vData As Variant) As Boolean", _method),
			new DefaultCompletionData("MakeStrDate", "Public Function BnkTools.MakeStrDate(ByVal txtDate As String, Optional ByVal dTemplate As Date) As String", _method),
			new DefaultCompletionData("Convert", "Public Function BnkTools.Convert(ByVal sTypeName As String, ByVal vData As Variant) As Variant", _method),
			new DefaultCompletionData("StrSize", "Function BnkTools.StrSize(ByVal sSource As String, iLen As Long, Optional ByVal iSide As Integer = 0, Optional ByVal sChar As String) As String", _method),
			new DefaultCompletionData("MemoLine", "Public Function BnkTools.MemoLine(ByVal sSource As String, ByVal iSize As Long) As String()", _method),
			new DefaultCompletionData("NewArray", "Public Function BnkTools.NewArray(ParamArray argList() As Variant) As Variant()", _method),
			new DefaultCompletionData("DecTo36", "Function BnkTools.DecTo36(ByVal iDec As Double, Optional ByVal iLine As Long = 36) As String", _method),
			new DefaultCompletionData("AsString", "Public Function VBO.AsString(ByVal nParam As Double, ByVal cVal As String, ByVal lDec As Boolean) As String", _method),
			new DefaultCompletionData("GetUserName", "Public Function BsTools.GetUserName() As String", _method),
			new DefaultCompletionData("GetRecordset", "Public Function VBO.GetRecordset(ByVal sSQL As String, aParam As Variant, ByVal iOpt As BnkTools.bsGROptions) As ADODB.Recordset", _method),
			new DefaultCompletionData("IsPermission", "Public Function BsTools.IsPermission(ByVal sObjhectName As String, ByVal iGrant As bsGrant) As Boolean", _method),
			new DefaultCompletionData("IsFormRight", "Public Function BsTools.IsFormRight(ByVal sFormName As String, ByVal iGrant As bsGrant) As Boolean", _method),
			new DefaultCompletionData("BeginTransaction", "Public Sub BsTools.BeginTransaction()", _method),
			new DefaultCompletionData("CommitTransaction", "Public Sub BsTools.CommitTransaction()", _method),
			new DefaultCompletionData("AbortTransaction", "Public Sub BsTools.AbortTransaction()", _method),
			new DefaultCompletionData("SaveToFile", "XMLObject Public Sub SaveToFile(ByVal sFileName As String)", _method),
			new DefaultCompletionData("AddRecord", "XMLObject Public Function AddRecord(ByVal sChildObjectName As String) As Long", _method),
			new DefaultCompletionData("TruncateRecords", "XMLObject Public Sub TruncateRecords(ByVal sChildObjectName As String)", _method),
			new DefaultCompletionData("DelRecord", "XMLObject Public Sub DelRecord(ByVal sChildObjectName As String, ByVal iRecNum As Long)", _method),
			new DefaultCompletionData("RecCount", "XMLObject Public Function RecCount(ByVal sChildObjectName As String) As Long", _method),
			new DefaultCompletionData("GetAttributeValue", "XMLObject Public Function GetAttributeValue(ByVal sQueryPath As String) As Variant", _method),
			new DefaultCompletionData("GetAttribute", "XMLObject Public Function GetAttribute(ByVal sQueryPath As String) As String", _method),
			new DefaultCompletionData("SetAttribute", "XMLObject Public Sub SetAttribute(ByVal sQueryPath As String, ByVal vData As Variant)", _method),
			new DefaultCompletionData("GetProperty", "XMLObject Public Function GetProperty(ByVal sPropertyName As String, Optional ByVal sPropAttName As String) As Variant", _method),
			new DefaultCompletionData("SetProperty", "XMLObject Public Sub SetProperty(ByVal sPropertyName As String, ByVal vData As Variant)", _method),
			new DefaultCompletionData("SetState", "XMLObject Public Sub SetState(ByVal iStateID As Long, ByVal sDescription As String)", _method),
			new DefaultCompletionData("Read", "XMLObject Public Function Read(ByVal sObjectName As String, aParam() As Variant) As Boolean", _method),
			new DefaultCompletionData("ReadByHandle", "XMLObject Public Function ReadByHandle(ByVal sObjectName As String, pHandle As Long) As Boolean", _method),
			new DefaultCompletionData("Save", "XMLObject Public Sub Save(ByVal bNew As Boolean)", _method),
			new DefaultCompletionData("SaveAs", "XMLObject Public Sub SaveAs(aParam() As Variant)", _method),
			new DefaultCompletionData("Delete", "XMLObject Public Sub Delete()", _method),
			new DefaultCompletionData("Dir", "Public Function VBO.Dir(ByVal PathName As String, Optional ByVal FileAttribute As VbFileAttribute) As String", _method),
			new DefaultCompletionData("Choose", "Public Function VBO.Choose(Index, ParamArray Choice())", _method),
			new DefaultCompletionData("IIf", "Public Function VBO.IIf(Expression, TruePart, FalsePart)", _method),
			new DefaultCompletionData("Format", "Public Function VBO.Format(Expression, sFormat)", _method),
			new DefaultCompletionData("IfNull", "Public Function VBO.IfNull(Expression, TruePart)", _method),
			new DefaultCompletionData("GetToken", "Public Function VBO.GetToken(ByVal sSource As String, ByVal iItem As Long, Optional ByVal sSep As String = ';')", _method),
			new DefaultCompletionData("GetParameters", "Public Function VBO.GetParameters(ByVal oForm As Object)", _method),
			new DefaultCompletionData("MakeOrder", @"Public Function VBO.MakeOrder(ByVal nDoc As String, ByVal dOper As Date, ByVal sAccntDt As String,ByVal sAccntCt As String, ByVal curSValueDt As Currency, ByVal curSValueCt As Currency, ByVal sAccntDivDt As String, ByVal sAccntDivCt As String, Optional ByVal iVo As Long = 6, Optional ByVal sName As String, Optional ByVal sBasis As String, Optional ByVal sApplication As String, Optional ByVal sIncluding As String, Optional ByVal sContents As String) As BsTools.PayDoc", _method),
			new DefaultCompletionData("MakeAccnt", "Public Function VBO.MakeAccnt(ByVal sAccntMask As String, Optional ByVal iClNum As Long = 0, Optional ByVal sName As String = '', Optional ByVal dOpen As Date) As BsTools.Accnt", _method),
			new DefaultCompletionData("GetPadeg", "Public Function VBO.GetPadeg(ByVal sFIO As String, ByVal iPadeg As Long) As String", _method),
			new DefaultCompletionData("PadL", "Public Function VBO.PadL(ByVal sSource As String, ByVal iLen As Long, ByVal sChar As String) As String", _method),
			new DefaultCompletionData("PadC", "Public Function VBO.PadC(ByVal sSource As String, ByVal iLen As Long, ByVal sChar As String) As String", _method),
			new DefaultCompletionData("PadR", "Public Function VBO.PadR(ByVal sSource As String, ByVal iLen As Long, ByVal sChar As String) As String", _method),
			new DefaultCompletionData("OpenStream", "Public Function VBO.OpenStream(Optional ByVal sTextFile As String, Optional ByVal sCharSet As String = 'Windows-1251')", _method),
			new DefaultCompletionData("Za", "Public Function VBO.Za(Optional ByVal DateStart As Date, Optional ByVal DateFinish As Date) As String", _method),
			new DefaultCompletionData("DayInYear", "Public Function VBO.DayInYear(ByVal dOper As Date) As Long", _method),
			new DefaultCompletionData("MathRound", "Public Function VBO.MathRound(ByVal Number As Double, ByVal NumAfterDecimal As Long) As Currency", _method),
			new DefaultCompletionData("TrunChar", "Public Function VBO.TrunChar(ByVal sSource As String, Optional ByVal sTrunc As String = ' ', Optional ByVal iCount As Long = 2) As String", _method),
			new DefaultCompletionData("Qt", "Public Function VBO.Qt(ByVal sSource As String) As String", _method),
			new DefaultCompletionData("Eval", "Public Function VBO.Eval(ByVal sExpression As String, Optional ByVal objSource As BsTools.XMLObject) As Variant", _method),
			new DefaultCompletionData("StrConv", "Public Function VBO.StrConv(ByVal sSource As String, ByVal ConvType As VbStrConv, Optional ByVal LocaleID As Long = 0)", _method),
			new DefaultCompletionData("Properties", "CSetup Public Function Properties(ByVal sSettingName As String, Optional ByVal vDef As Variant) As String", _method),
			new DefaultCompletionData("Load", "CSetup Public Sub Load(Optional ByVal sGroupName As String = 'Setup')", _method),
			new DefaultCompletionData("LoadSettings", "CSetup Public Sub LoadSettings(ByVal sObjectName As String)", _method),
			new DefaultCompletionData("GetSetting", "CSetup Public Function GetSetting(ByVal sGroupName As String, ByVal sSettingName As String, Optional ByVal vDef As Variant) As String", _method),
			new DefaultCompletionData("RunMacro", "Browse Public Sub RunMacro(Optional ByVal sProjectName As String)", _method),
			new DefaultCompletionData("ReadObject", "Browse Public Function ReadObject(Optional ByVal bNew As Boolean) As Object", _method),
			new DefaultCompletionData("RefreshAll", "Browse Public Sub RefreshAll(Optional ByVal iBookmark As Long)", _method),
			new DefaultCompletionData("Show", "Browse Public Sub Show(Optional ByVal xMode As Long = vbModeless)", _method),
			new DefaultCompletionData("GetStringForSelected", "Browse Public Function GetStringForSelected(Optional ByVal sField As String = 'Handle') As String", _method),
			new DefaultCompletionData("SetFilter", "Browse Public Sub SetFilter(ByVal sFilter As String, Optional ByVal sOrder As String, Optional ByVal Before As Boolean = False)", _method),
			new DefaultCompletionData("CmdInit", "Browse Public Sub CmdInit()", _method),
			new DefaultCompletionData("DoCMD", "Browse Public Sub DoCMD(Optional ByVal objSource As Object, Optional ByVal iAction As Newbank.ActionTypes = atAny, Optional ByVal iActionItem As Long = 1, Optional ByVal sMacroDefault As String = vbNullString)", _method),
			new DefaultCompletionData("ChangeObjState", "Browse Public Sub ChangeObjState(ByVal objSource As Object, ByVal iNewState As Long, Optional ByVal sDescription As String = vbNullString, _", _method),
			new DefaultCompletionData("AddControl", "CDialog Public Function AddControl(ByVal sControlType As String, ByVal sControlName As String, Optional ByVal sContainer As String = vbNullString) As Object", _method),
			new DefaultCompletionData("AddStyled", "CDialog Public Sub AddStyled(ByVal iStyle As ControlStyles, Optional ByVal sControlName As String = vbNullString, Optional ByVal sContainer As String = vbNullString, Optional ByVal sLinkedControl As String = vbNullString)", _method),
			new DefaultCompletionData("Site", "CDialog Public Sub Site(ByVal sControl As String, ByVal sLinkedControl As String, ByVal iSiteStyle As SiteStyles, Optional ByVal iDelta As Long = 40, Optional ByVal iWidth As Long = vbNull, Optional ByVal iHeight As Long = vbNull)", _method),
			new DefaultCompletionData("ShowMsg", "CDialog Public Function ShowMsg(ByVal sPrompt As String, Optional ByVal iButtons As VbMsgBoxStyle = vbOKOnly, Optional ByVal sTitle As String = vbNullString, Optional ByVal sHelpFile As String = vbNullString, Optional ByVal sHelpContext As Long) As VbMsgBoxResult", _method),
			new DefaultCompletionData("SendKeys", "CDialog Public Sub SendKeys(ByVal sKeyToSend As String, Optional ByVal bWait As Boolean)", _method),
			new DefaultCompletionData("PopupMenu", "CDialog Public Sub PopupMenu(Optional ByVal sMenuName As String)", _method),
			new DefaultCompletionData("FileOpenSave", @"CDialog Public Function FileOpenSave(Optional ByVal sFileName As String = 'Temp', Optional ByVal iStyle As Long = 1, Optional ByVal sFilter As String = 'Все файлы (*.*)|*.*', Optional ByVal iFilterIndex As Long = 1, Optional ByVal sDefaultExt As String = 'txt', Optional ByVal sInitDir As String = "") As String", _method),
			new DefaultCompletionData("GetFocus", "CDialog GetFocus", _method),
			new DefaultCompletionData("StrView", @"CDialog Public Function StrView(ByVal sSource As String, Optional ByVal sLanguage As String = 'Text', Optional ByVal iTop As Long = 0, Optional ByVal iLeft As Long = 0, Optional ByVal iWidth As Long = 0, Optional ByVal iHeight As Long = 0, Optional ByVal iTextLen As Long = 256) As String", _method),
			new DefaultCompletionData("CDialog Cancel", "", _method)
		};

		public static ICompletionData[] NewbankProperties = new ICompletionData[]{
			new DefaultCompletionData("objSettings", "Public Property Get VBO.objSettings(ByVal sVirtualObjectName As String) As Newbank.CSetup", _method),
			new DefaultCompletionData("ObjRead", "Public Property Get VBO.ObjRead(ByVal sObjName As String, aParam As Variant) As BsTools.XMLObject", _method),
			new DefaultCompletionData("PasteObject", "", _property),
			new DefaultCompletionData("CmdParameters", "Browse Public Property Get CmdParameters() As VBA.Collection", _method),
			new DefaultCompletionData("CmdReturns", "Browse Public Property Get CmdReturns() As VBA.Collection", _method),
			new DefaultCompletionData("IsNew", "CDialog Public Property Get IsNew() As Boolean", _method),
			new DefaultCompletionData("Controls", "CDialog Public Property Get Controls(ByVal sIndex As String) As Object", _method),
			new DefaultCompletionData("DialogForm", "CDialog Public Property Get DialogForm() As Object", _method),
			new DefaultCompletionData("PropEdit", "CDialog Public Property Get PropEdit() As Boolean", _method),
			new DefaultCompletionData("Owner", "CDialog Public Property Owner As Newbank.Browse", _property),
			new DefaultCompletionData("Value", "", _property),
			new DefaultCompletionData("Caption", "", _property),
			new DefaultCompletionData("Visible", "", _property),
			new DefaultCompletionData("Recordset", "", _property),
			new DefaultCompletionData("DateStart", "", _property),
			new DefaultCompletionData("DateFinish", "", _property),
			new DefaultCompletionData("AccntFormat", "", _property),
			new DefaultCompletionData("CurrencyFormat", "", _property),
			new DefaultCompletionData("RateFormat", "", _property),
			new DefaultCompletionData("DateFormat", "", _property),
			new DefaultCompletionData("DateMask", "", _property),
			new DefaultCompletionData("ActiveBrowse", "", _property),
			new DefaultCompletionData("Path", "", _property),
			new DefaultCompletionData("Buffer", "", _property),
			new DefaultCompletionData("Application", "", _property),
			new DefaultCompletionData("Form", "", _property),
			new DefaultCompletionData("Status", "", _property),
			new DefaultCompletionData("TransactionObject", "Public Property BsTools.TransactionObject As Object", _property),
			new DefaultCompletionData("UserData", "XMLObject Public Property Get UserData() As BsTools.Domains", _method),
			new DefaultCompletionData("ObjectName", "", _property),
			new DefaultCompletionData("VirtualObjectName", "", _property),
			new DefaultCompletionData("Setup", "", _property),
			new DefaultCompletionData("XML", "", _property),
			new DefaultCompletionData("RUR", "", _property),
		};
	}
}
