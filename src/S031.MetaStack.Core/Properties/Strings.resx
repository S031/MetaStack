<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DefaultConnection" xml:space="preserve">
    <value>DefaultConnection</value>
  </data>
  <data name="S031.MetaStack.Core.Actions.CreateEvaluator.1" xml:space="preserve">
    <value>Required interface parameter '{0}. {1}', not found in the parameter list of operation '{2}'</value>
  </data>
  <data name="S031.MetaStack.Core.Actions.CreateEvaluator.2" xml:space="preserve">
    <value>Number of operation parameters '{0}', does not match interface '{1}'</value>
  </data>
  <data name="S031.MetaStack.Core.App.AppHost.1" xml:space="preserve">
    <value>The config.json configuration file was not found</value>
  </data>
  <data name="S031.MetaStack.Core.Data.DbProviderFactories.GetFactory.1" xml:space="preserve">
    <value>The {0} type does not have a static "Instance" field that returns an instance of DbProviderFactory</value>
  </data>
  <data name="S031.MetaStack.Core.Data.DbProviderFactories.GetFactory.2" xml:space="preserve">
    <value>The type derived from DbProviderFactory was not found in {0}</value>
  </data>
  <data name="S031.MetaStack.Core.Data.DbProviderFactories.GetFactory.3" xml:space="preserve">
    <value>An assembly containing definitions for {0} was not found</value>
  </data>
  <data name="S031.MetaStack.Core.Data.DbProviderFactories.GetFactory.4" xml:space="preserve">
    <value>No library containing definitions for {0}</value>
  </data>
  <data name="S031.MetaStack.Core.Data.MdbContext.array2List.1" xml:space="preserve">
    <value>Parameter a must implements IEnumerable&lt;&gt; interface</value>
  </data>
  <data name="S031.MetaStack.Core.Data.MdbContext.array2List.2" xml:space="preserve">
    <value>IEnumerable &lt;{0}&gt; argument type not supported</value>
  </data>
  <data name="S031.MetaStack.Core.Data.MdbContext.Commit.1" xml:space="preserve">
    <value>Can't call Commit method without transaction</value>
  </data>
  <data name="S031.MetaStack.Core.Data.ObjectFactories.GetFactories.1" xml:space="preserve">
    <value>The type derived from {0} was not found in service collection</value>
  </data>
  <data name="S031.MetaStack.Core.Data.writeData.1" xml:space="preserve">
    <value>The length of the data array must be equal to the length of the array of field names</value>
  </data>
  <data name="S031.MetaStack.Core.ORM.JMXFactory_Create.1" xml:space="preserve">
    <value>No class inherited from JMXFactory defined</value>
  </data>
  <data name="S031.MetaStack.Core.ORM.JMXFactory_Create.2" xml:space="preserve">
    <value>No class inherited from JMXFactory contained attribute of type DBRefAttribute  defined</value>
  </data>
  <data name="S031.MetaStack.Core.ORM.JMXProvider.ObjectNotFound" xml:space="preserve">
    <value>Object '{0}' with specified id  '{1}' not found in the database</value>
  </data>
  <data name="S031.MetaStack.Core.ORM.JMXSchema.ctor.1" xml:space="preserve">
    <value>Not found the schema of the object '{0}'</value>
  </data>
  <data name="S031.MetaStack.Core.ORM.JMXSchema.ParseXml.1" xml:space="preserve">
    <value>Missing required element '{0}'</value>
  </data>
  <data name="S031.MetaStack.Core.ORM.JMXSchemaProviderDB.normalize.1" xml:space="preserve">
    <value>One or more attribute is required in the schema</value>
  </data>
  <data name="S031.MetaStack.Core.ORM.JMXSchemaProviderDB.normalize.2" xml:space="preserve">
    <value>For an object type attribute, you must specify a schema</value>
  </data>
  <data name="S031.MetaStack.Core.ORM.JMXSchemaProviderDB.normalize.3" xml:space="preserve">
    <value>The FieldName '{0}' specified in the {1} is not in the attribute list</value>
  </data>
  <data name="S031.MetaStack.Core.ORM.JMXSchemaProviderDB.normalize.4" xml:space="preserve">
    <value>The field '{0}' has an invalid data type</value>
  </data>
  <data name="S031.MetaStack.Core.ORM.JMXSchemaProviderDB.normalize.5" xml:space="preserve">
    <value>A primary key is required for a table '{0}' that includes columns of type 'object'</value>
  </data>
  <data name="S031.MetaStack.Core.SecurityAuthorizationExceptions.GetMessage.1" xml:space="preserve">
    <value>Permission denied for user {0} to execute '{1}' of object '{2}'</value>
  </data>
  <data name="S031.MetaStack.Core.SysCat.SysCatManager.getSchema.1" xml:space="preserve">
    <value>Object schema '{0}' not found in database</value>
  </data>
  <data name="S031.MetaStack.Core.SysCat.SysCatManager.getSchema.2" xml:space="preserve">
    <value>Object schema '{0}' with the SyncState={1} not found in database</value>
  </data>
  <data name="S031.MetaStack.Services.TCPServerService.Accept.1" xml:space="preserve">
    <value>The minimum message length can not be less than 32 bytes</value>
  </data>
  <data name="SysCatConnection" xml:space="preserve">
    <value>SysCatConnection</value>
  </data>
</root>